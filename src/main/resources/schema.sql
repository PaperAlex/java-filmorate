DROP TABLE IF EXISTS rating CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;


CREATE TABLE IF NOT EXISTS rating (
  rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  rating_name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
  film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  description varchar(200),
  releaseDate timestamp,
  duration integer CHECK (duration > 0),
  rating_id INTEGER REFERENCES rating (rating_id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS genre (
  genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre_name varchar NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre (
  film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
  genre_id integer NOT NULL REFERENCES genre (genre_id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS users (
  user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar NOT NULL UNIQUE,
  login varchar NOT NULL UNIQUE,
  name varchar NOT NULL,
  birthday date
);

CREATE TABLE IF NOT EXISTS friends (
  user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
  friend_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
  status bool
);

CREATE TABLE IF NOT EXISTS likes (
  film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
  user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE
);